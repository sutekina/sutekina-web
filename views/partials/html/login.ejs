<div class="login-container">
    <div class="switch-container">
        <a href="/account/register" class="switch" style="background-image: url('https://<%- config.domains.avatar %>/0');"></a>
    </div>
    <form class="login-form" method="POST">
        <label for="username" class="login-label">
            username
            <input type="text" class="login-input" id="username" name="username" autocomplete="username" placeholder="your username">
            <span id="username-error"></span>
        </label>
        <label for="password" class="login-label">
            password
            <input type="password" class="login-input" id="password" name="password" autocomplete="current-password" placeholder="your password">
            <span id="password-error"></span>
        </label>
        <div id="general-error"></div>
        <div class="login-checkbox-container">
            <label for="keeplogin" class="login-checkbox-label">
                <input type="checkbox" class="login-checkbox" id="keeplogin" name="keeplogin">
                stay logged in
            </label>
            <label for="showpassword" class="login-checkbox-label">
                <input type="checkbox" class="login-checkbox" id="showpassword"></input>
                show password
            </label>
        </div>
        <input type="hidden" name="geoInfo" id="geo-info">
        <button type="submit" class="login-button">LOGIN</button>
        <span class="login-anchor-container">or <a class="login-anchor" href="/account/register">create a new account.</a></span>
    </form>
</div>

<div class="verify-container">
    <div class="switch-container">
        <a href="/account/login" class="switch" style="background-image: url('https://<%- config.domains.avatar %>/0');"></a>
    </div>
    <div class="verify-message"></div>
</div>

<script>
    const ERRORS = {
        VERIFY_ACCOUNT: {
            message: "Verify your account to login on the website by logging into sutekina! through your osu! client.<br>If you are having a hard time connecting to the server please refer to <a href='/connect'>the connect page</a>.",
            place: "verify"
        },
        LOGIN_FAILED: {
            message: "Your login attempt has failed.",
            place: "general"
        },
        LOGIN_INVALID: {
            message: "Please check your username or password.",
            place: "general"
        },
        LOGIN_TIMEOUT: {
            message: "Your login attempt has timed out.",
            place: "general"
        },
        ACCOUNT_BANNED: {
            message: "Your account has been banned, if you want to appeal please contact a staff member.",
            place: "general"
        },

        NO_USERNAME: {
            message: "Please enter a username.",
            place: "username"
        },
        USERNAME_TOO_SHORT: {
            message: "The entered username is too short.",
            place: "username"
        },
        USERNAME_TOO_LONG: {
            message: "The entered username is too long.",
            place: "username"
        },
        USERNAME_FORBIDDEN: {
            message: "Your username is forbidden.",
            place: "username"
        },
        USERNAME_INVALID: {
            message: "The entered username is invalid.",
            place: "username"
        },

        NO_PASSWORD: {
            message: "Please enter a password.",
            place: "password"
        },
        PASSWORD_TOO_SHORT: {
            message: "The entered password is too short.",
            place: "password"
        },
        PASSWORD_TOO_LONG: {
            message: "The entered password is too long.",
            place: "password"
        },
        PASSWORD_INVALID: {
            message: "The entered password is invalid.",
            place: "password"
        }
    };

    const error = ERRORS[new URLSearchParams(window.location.search).get("error")];

    if(error && error.place === "verify") {
        let verifyContainer = document.getElementsByClassName("verify-container")[0];
        let loginContainer = document.getElementsByClassName("login-container")[0];
        let verifyMessage = document.getElementsByClassName("verify-message")[0];
        
        verifyContainer.style.display = "flex";
        loginContainer.style.display = "none";
        verifyMessage.innerHTML = error.message;
    } else if(error) {
        let element = document.getElementById(`${error.place}-error`);
        element.innerText = error.message;
        element.style.display = "block";
    };

    document.getElementsByClassName("login-form")[0].addEventListener("submit", async e => {
        e.preventDefault()
        document.getElementsByClassName("login-button")[0].classList.add("login-button-disabled");
        const result = await fetch("https://json.geoiplookup.io/").then(res => res.json()).catch(e => {
            console.log("IP Fetch failed, AdBlocker active?");
            return {
                ip: "0.0.0.0"
            };
        });
        result.date = new Date().getTime();
        document.getElementById("geo-info").value = JSON.stringify(result);
        e.target.submit();
    });
</script>